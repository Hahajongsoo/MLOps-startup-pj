apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: katib-experiment-
spec:
  entrypoint: katib-experiment-with-slack-noti
  templates:
    - name: katib-experiment-with-slack-noti
      steps:
        - - name: create-katib-experiment
            template: katib-experiment
        - - name: send-slack-message
            template: slack-noti
            arguments:
              parameters:
                - name: experiment-name
                  value: "{{steps.create-katib-experiment.outputs.parameters.generated-experiment-name}}"
                - name: validation-accuracy
                  value: "{{steps.create-katib-experiment.outputs.parameters.validation-accuracy}}"
                - name: train-accuracy
                  value: "{{steps.create-katib-experiment.outputs.parameters.train-accuracy}}"
                - name: lr
                  value: "{{steps.create-katib-experiment.outputs.parameters.lr}}"
                - name: num-layers
                  value: "{{steps.create-katib-experiment.outputs.parameters.num-layers}}"
                - name: optimizer
                  value: "{{steps.create-katib-experiment.outputs.parameters.optimizer}}"
    - name: katib-experiment
      resource:
        action: create
        successCondition: status.trialsSucceeded=3
        manifest: |
          apiVersion: kubeflow.org/v1beta1
          kind: Experiment
          metadata:
            namespace: kubeflow-user-example-com
            generateName: random-
          spec:
            metricsCollectorSpec:
              collector:
                kind: StdOut
              source:
                filter:
                  metricsFormat:
                    - "([\\w|-]+)\\s*:\\s*([+-]?\\d*(\\.\\d+)?([Ee][+-]?\\d+)?)"
            objective:
              type: minimize
              goal: 0.99
              objectiveMetricName: validation
              additionalMetricNames:
                - train-accuracy
            algorithm:
              algorithmName: random
            parallelTrialCount: 3
            maxTrialCount: 600
            maxFailedTrialCount: 3
            parameters:
              - name: eta
                parameterType: double
                feasibleSpace:
                  min: "0.01"
                  max: "0.3"
              - name: gamma
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "8.0"
              - name: max-depth
                parameterType: int
                feasibleSpace:
                  min: "4"
                  max: "8"
              - name: min-child-weight
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "8.0"
              - name: subsample
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "1.0"
              - name: colsample-bytree
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "1.0"
              - name: reg-alpha
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "9.0"
              - name: reg-lambda
                parameterType: double
                feasibleSpace:
                  min: "1.0"
                  max: "1.5"
            trialTemplate:
              primaryContainerName: training-container
              trialParameters:
                - name: learningRate
                  description: Learning rate for the training model
                  reference: eta
                - name: gamma
                  description: reg
                  reference: gamma
                - name: maxDepth
                  description: reg
                  reference: max-depth
                - name: minChildWeight
                  description: reg
                  reference: min-child-weight
                - name: subsample
                  description: reg
                  reference: subsample
                - name: colsampleBytree
                  description: reg
                  reference: colsample-bytree
                - name: regAlpha
                  description: reg
                  reference: reg-alpha
                - name: regLambda
                  description: reg
                  reference: reg-lambda
              trialSpec:
                apiVersion: batch/v1
                kind: Job
                spec:
                  template:
                    metadata:
                      annotations:
                        sidecar.istio.io/inject: "false"
                    spec:
                      containers:
                        - name: training-container
                          image: hahajong/xgb-katib:latest
                          command:
                            - "python"
                            - "/app/xgb.py"
                            - "--eta=${trialParameters.learningRate}"
                            - "--gamma=${trialParameters.gamma}"
                            - "--max-depth=${trialParameters.maxDepth}"
                            - "--min-child-weight=${trialParameters.minChildWeight}"
                            - "--subsample=${trialParameters.subsample}"
                            - "--colsample-bytree=${trialParameters.colsampleBytree}"
                            - "--reg-alpha=${trialParameters.regAlpha}"
                            - "--reg-lambda=${trialParameters.regLambda}"
                          envFrom:
                            - secretRef:
                                name: s3-credential
                      restartPolicy: Never

      outputs:
        parameters:
          - name: generated-experiment-name
            valueFrom:
              jsonPath: "{.metadata.name}"
          - name: validation-accuracy
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.observation.metrics[0].latest}"
          - name: train-accuracy
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.observation.metrics[1].latest}"
          - name: lr
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.parameterAssignments[0].value}"
          - name: num-layers
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.parameterAssignments[1].value}"
          - name: optimizer
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.parameterAssignments[2].value}"
    - name: slack-noti
      inputs:
        parameters:
          - name: experiment-name
          - name: validation-accuracy
          - name: train-accuracy
          - name: lr
          - name: num-layers
          - name: optimizer
      container:
        image: curlimages/curl
        command: [sh, -c]
        args: [
            'curl -X POST -H -g "Content-Type: application/json" -d ''{
            "blocks": [
            {
            "type": "section",
            "text": {
            "type": "mrkdwn",
            "text": "<!channel> \n katib Experiment *{{inputs.parameters.experiment-name}}* 이 끝났습니다. \n 실험을 확인하고 mlflow에 모델을 업로드 해주세요."
            }
            },
            {
            "type": "divider"
            },
            {
            "type": "section",
            "text": {
            "type": "mrkdwn",
            "text": "*Best Trial Info* <https://ysflow.com/_/katib/experiment/{{inputs.parameters.experiment-name}}?ns=argo|(실험 확인)>"
            }
            },
            {
            "type": "section",
            "text": {
            "type": "mrkdwn",
            "text": "• Validation Accuracy: {{inputs.parameters.validation-accuracy}} \n • Train Accuracy: {{inputs.parameters.train-accuracy}}"
            }
            },
            {
            "type": "section",
            "text": {
            "type": "mrkdwn",
            "text": "*Parameters*"
            }
            },
            {
            "type": "section",
            "fields": [
            {
            "type": "plain_text",
            "text": "• lr: {{inputs.parameters.lr}}",
            "emoji": true
            },
            {
            "type": "plain_text",
            "text": "• num-layers: {{inputs.parameters.num-layers}}",
            "emoji": true
            },
            {
            "type": "plain_text",
            "text": "• optimizer: {{inputs.parameters.optimizer}}",
            "emoji": true
            }
            ]
            },
            {
            "type": "divider"
            },
            {
            "type": "context",
            "elements": [
            {
            "type": "image",
            "image_url": "https://pbs.twimg.com/profile_images/625633822235693056/lNGUneLX_400x400.jpg",
            "alt_text": "cute cat"
            },
            {
            "type": "mrkdwn",
            "text": "오늘 하루도 화이팅!"
            }
            ]
            }
            ]
            }''
            https://hooks.slack.com/services/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',
          ]

---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: katib-experiment-
spec:
  entrypoint: katib-experiment-with-slack-noti
  templates:
    - name: katib-experiment-with-slack-noti
      steps:
        - - name: create-katib-experiment
            template: katib-experiment
        - - name: send-slack-message
            template: slack-noti
            arguments:
              parameters:
                - name: experiment-name
                  value: "{{steps.create-katib-experiment.outputs.parameters.generated-experiment-name}}"
                - name: validation
                  value: "{{steps.create-katib-experiment.outputs.parameters.validation}}"
                - name: train-accuracy
                  value: "{{steps.create-katib-experiment.outputs.parameters.train-accuracy}}"
                - name: lr
                  value: "{{steps.create-katib-experiment.outputs.parameters.lr}}"
                - name: num-layers
                  value: "{{steps.create-katib-experiment.outputs.parameters.num-layers}}"
                - name: optimizer
                  value: "{{steps.create-katib-experiment.outputs.parameters.optimizer}}"
    - name: katib-experiment
      resource:
        action: create
        successCondition: status.trialsSucceeded=3
        manifest: |
          apiVersion: kubeflow.org/v1beta1
          kind: Experiment
          metadata:
            namespace: kubeflow-user-example-com
            generateName: random-
          spec:
            metricsCollectorSpec:
              collector:
                kind: StdOut
              source:
                filter:
                  metricsFormat:
                    - "([\\w|-]+)\\s*:\\s*([+-]?\\d*(\\.\\d+)?([Ee][+-]?\\d+)?)"
            objective:
              type: minimize
              goal: 0.99
              objectiveMetricName: validation
              additionalMetricNames:
                - train-accuracy
            algorithm:
              algorithmName: random
            parallelTrialCount: 3
            maxTrialCount: 10
            maxFailedTrialCount: 3
            parameters:
              - name: eta
                parameterType: double
                feasibleSpace:
                  min: "0.01"
                  max: "0.3"
              - name: gamma
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "8.0"
              - name: max-depth
                parameterType: int
                feasibleSpace:
                  min: "4"
                  max: "8"
              - name: min-child-weight
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "8.0"
              - name: subsample
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "1.0"
              - name: colsample-bytree
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "1.0"
              - name: reg-alpha
                parameterType: double
                feasibleSpace:
                  min: "0.0"
                  max: "9.0"
              - name: reg-lambda
                parameterType: double
                feasibleSpace:
                  min: "1.0"
                  max: "1.5"
            trialTemplate:
              primaryContainerName: training-container
              trialParameters:
                - name: learningRate
                  description: Learning rate for the training model
                  reference: eta
                - name: gamma
                  description: reg
                  reference: gamma
                - name: maxDepth
                  description: reg
                  reference: max-depth
                - name: minChildWeight
                  description: reg
                  reference: min-child-weight
                - name: subsample
                  description: reg
                  reference: subsample
                - name: colsampleBytree
                  description: reg
                  reference: colsample-bytree
                - name: regAlpha
                  description: reg
                  reference: reg-alpha
                - name: regLambda
                  description: reg
                  reference: reg-lambda
              trialSpec:
                apiVersion: batch/v1
                kind: Job
                spec:
                  template:
                    metadata:
                      annotations:
                        sidecar.istio.io/inject: "false"
                    spec:
                      containers:
                        - name: training-container
                          image: hahajong/xgb-katib:latest
                          command:
                            - "python"
                            - "/app/xgb.py"
                            - "--eta=${trialParameters.learningRate}"
                            - "--gamma=${trialParameters.gamma}"
                            - "--max-depth=${trialParameters.maxDepth}"
                            - "--min-child-weight=${trialParameters.minChildWeight}"
                            - "--subsample=${trialParameters.subsample}"
                            - "--colsample-bytree=${trialParameters.colsampleBytree}"
                            - "--reg-alpha=${trialParameters.regAlpha}"
                            - "--reg-lambda=${trialParameters.regLambda}"
                          envFrom:
                            - secretRef:
                                name: s3-credential
                      restartPolicy: Never

      outputs:
        parameters:
          - name: generated-experiment-name
            valueFrom:
              jsonPath: "{.metadata.name}"
          - name: validation
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.observation.metrics[0].latest}"
          - name: train-accuracy
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.observation.metrics[1].latest}"
          - name: lr
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.parameterAssignments[0].value}"
          - name: num-layers
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.parameterAssignments[1].value}"
          - name: optimizer
            valueFrom:
              jsonPath: "{.status.currentOptimalTrial.parameterAssignments[2].value}"
    - name: slack-noti
      inputs:
        parameters:
          - name: experiment-name
          - name: validation
          - name: train-accuracy
          - name: lr
          - name: num-layers
          - name: optimizer
      container:
        image: curlimages/curl
        command: [sh, -c]
        args: [
            'curl -X POST -H -g "Content-Type: application/json" -d ''{
            "blocks": [
            {
            "type": "section",
            "text": {
            "type": "mrkdwn",
            "text": "<!channel> \n katib Experiment *{{inputs.parameters.experiment-name}}* 이 끝났습니다. \n 실험을 확인하고 mlflow에 모델을 업로드 해주세요."
            }
            },
            {
            "type": "divider"
            },
            {
            "type": "section",
            "text": {
            "type": "mrkdwn",
            "text": "*Best Trial Info* <http://13.124.36.34:8080/_/katib/experiment/{{inputs.parameters.experiment-name}}?ns=kubeflow-user-example-com|(실험 확인)>"
            }
            },
            {
            "type": "section",
            "text": {
            "type": "mrkdwn",
            "text": "• Validation Accuracy: {{inputs.parameters.validation-accuracy}} \n • Train Accuracy: {{inputs.parameters.train-accuracy}}"
            }
            },
            {
            "type": "divider"
            },
            {
            "type": "context",
            "elements": [
            {
            "type": "image",
            "image_url": "https://pbs.twimg.com/profile_images/625633822235693056/lNGUneLX_400x400.jpg",
            "alt_text": "cute cat"
            },
            {
            "type": "mrkdwn",
            "text": "오늘 하루도 화이팅!"
            }
            ]
            }
            ]
            }''
            https://hooks.slack.com/services/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',
          ]